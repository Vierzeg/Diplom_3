{"name": "test_go_to_order_history", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button_button__33qZ0 button_button_type_primary__1O7Bx button_button_size_medium__3zxIa\">...</button> is not clickable at point (952, 548). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF752DACF45+75717]\n\tGetHandleVerifier [0x00007FF752DACFA0+75808]\n\t(No symbol) [0x00007FF752B78F9A]\n\t(No symbol) [0x00007FF752BD7439]\n\t(No symbol) [0x00007FF752BD4DF2]\n\t(No symbol) [0x00007FF752BD1EA1]\n\t(No symbol) [0x00007FF752BD0DA1]\n\t(No symbol) [0x00007FF752BC2394]\n\t(No symbol) [0x00007FF752BF737A]\n\t(No symbol) [0x00007FF752BC1C46]\n\t(No symbol) [0x00007FF752BF7590]\n\t(No symbol) [0x00007FF752C1F39C]\n\t(No symbol) [0x00007FF752BF7153]\n\t(No symbol) [0x00007FF752BC0421]\n\t(No symbol) [0x00007FF752BC11B3]\n\tGetHandleVerifier [0x00007FF7530AD71D+3223453]\n\tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\n\tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\n\tGetHandleVerifier [0x00007FF752DC6A1A+180890]\n\tGetHandleVerifier [0x00007FF752DCE11F+211359]\n\tGetHandleVerifier [0x00007FF752DB5294+109332]\n\tGetHandleVerifier [0x00007FF752DB5442+109762]\n\tGetHandleVerifier [0x00007FF752D9BA59+4825]\n\tBaseThreadInitThunk [0x00007FFA26717374+20]\n\tRtlUserThreadStart [0x00007FFA278BCC91+33]", "trace": "self = <tests.test_profile.TestProfile object at 0x0000028EE8A87410>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe1a657bee451e8b29b0421a911e33e0\")>\ncreate_and_login_user = {'accessToken': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MzIxODVkOWVkMjgwMDAxYjVmOWU3OSIsImlhdCI6MTc0O...prJQuei0mJ94b0C-ckLcrCAgHu8V-uGr7BiYEY', 'email': 'test_qwqsj@yandex.ru', 'name': 'NAnCBhGJ', 'password': 'kav0LNEcu3'}\n\n    @allure.story(\"Переход в раздел История заказов\")\n    def test_go_to_order_history(self, driver, create_and_login_user):\n        driver.get(login_url)\n        login = LoginPage(driver)\n>       login.login_user(create_and_login_user[\"email\"], create_and_login_user[\"password\"])\n\ntests\\test_profile.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:31: in login_user\n    self.submit_login()\npages\\login_page.py:22: in submit_login\n    self.click(LoginPageLocators.LOGIN_BUTTON)\npages\\base_page.py:20: in click\n    element.click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028EE8AB60C0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...52D9BA59+4825]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA26717374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA278BCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button_button__33qZ0 button_button_type_primary__1O7Bx button_button_size_medium__3zxIa\">...</button> is not clickable at point (952, 548). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=136.0.7103.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF752DACF45+75717]\nE       \tGetHandleVerifier [0x00007FF752DACFA0+75808]\nE       \t(No symbol) [0x00007FF752B78F9A]\nE       \t(No symbol) [0x00007FF752BD7439]\nE       \t(No symbol) [0x00007FF752BD4DF2]\nE       \t(No symbol) [0x00007FF752BD1EA1]\nE       \t(No symbol) [0x00007FF752BD0DA1]\nE       \t(No symbol) [0x00007FF752BC2394]\nE       \t(No symbol) [0x00007FF752BF737A]\nE       \t(No symbol) [0x00007FF752BC1C46]\nE       \t(No symbol) [0x00007FF752BF7590]\nE       \t(No symbol) [0x00007FF752C1F39C]\nE       \t(No symbol) [0x00007FF752BF7153]\nE       \t(No symbol) [0x00007FF752BC0421]\nE       \t(No symbol) [0x00007FF752BC11B3]\nE       \tGetHandleVerifier [0x00007FF7530AD71D+3223453]\nE       \tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\nE       \tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\nE       \tGetHandleVerifier [0x00007FF752DC6A1A+180890]\nE       \tGetHandleVerifier [0x00007FF752DCE11F+211359]\nE       \tGetHandleVerifier [0x00007FF752DB5294+109332]\nE       \tGetHandleVerifier [0x00007FF752DB5442+109762]\nE       \tGetHandleVerifier [0x00007FF752D9BA59+4825]\nE       \tBaseThreadInitThunk [0x00007FFA26717374+20]\nE       \tRtlUserThreadStart [0x00007FFA278BCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Ввод email: 'test_qwqsj@yandex.ru'", "status": "passed", "parameters": [{"name": "email", "value": "'test_qwqsj@yandex.ru'"}], "start": 1748113501487, "stop": 1748113501553}, {"name": "Ввод пароля", "status": "passed", "parameters": [{"name": "password", "value": "'kav0LNEcu3'"}], "start": 1748113501554, "stop": 1748113501600}, {"name": "Нажатие на кнопку 'Войти'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button_button__33qZ0 button_button_type_primary__1O7Bx button_button_size_medium__3zxIa\">...</button> is not clickable at point (952, 548). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF752DACF45+75717]\n\tGetHandleVerifier [0x00007FF752DACFA0+75808]\n\t(No symbol) [0x00007FF752B78F9A]\n\t(No symbol) [0x00007FF752BD7439]\n\t(No symbol) [0x00007FF752BD4DF2]\n\t(No symbol) [0x00007FF752BD1EA1]\n\t(No symbol) [0x00007FF752BD0DA1]\n\t(No symbol) [0x00007FF752BC2394]\n\t(No symbol) [0x00007FF752BF737A]\n\t(No symbol) [0x00007FF752BC1C46]\n\t(No symbol) [0x00007FF752BF7590]\n\t(No symbol) [0x00007FF752C1F39C]\n\t(No symbol) [0x00007FF752BF7153]\n\t(No symbol) [0x00007FF752BC0421]\n\t(No symbol) [0x00007FF752BC11B3]\n\tGetHandleVerifier [0x00007FF7530AD71D+3223453]\n\tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\n\tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\n\tGetHandleVerifier [0x00007FF752DC6A1A+180890]\n\tGetHandleVerifier [0x00007FF752DCE11F+211359]\n\tGetHandleVerifier [0x00007FF752DB5294+109332]\n\tGetHandleVerifier [0x00007FF752DB5442+109762]\n\tGetHandleVerifier [0x00007FF752D9BA59+4825]\n\tBaseThreadInitThunk [0x00007FFA26717374+20]\n\tRtlUserThreadStart [0x00007FFA278BCC91+33]\n\n", "trace": "  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\login_page.py\", line 22, in submit_login\n    self.click(LoginPageLocators.LOGIN_BUTTON)\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 20, in click\n    element.click()\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 448, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1748113501600, "stop": 1748113502644}], "start": 1748113500856, "stop": 1748113502646, "uuid": "de3930da-9e0d-4cae-8ed7-3bd5a5219fc2", "historyId": "64dd331b350b27103be248cd6e4fd5c5", "testCaseId": "64dd331b350b27103be248cd6e4fd5c5", "fullName": "tests.test_profile.TestProfile#test_go_to_order_history", "labels": [{"name": "story", "value": "Переход в раздел История заказов"}, {"name": "feature", "value": "Личный кабинет"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_profile"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "DESKTOP-05J7DPF"}, {"name": "thread", "value": "32880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_profile"}]}
{"name": "test_ingredient_counter_increases", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF752DACF45+75717]\n\tGetHandleVerifier [0x00007FF752DACFA0+75808]\n\t(No symbol) [0x00007FF752B78F9A]\n\t(No symbol) [0x00007FF752BCF4C6]\n\t(No symbol) [0x00007FF752BCF77C]\n\t(No symbol) [0x00007FF752C22577]\n\t(No symbol) [0x00007FF752BF73BF]\n\t(No symbol) [0x00007FF752C1F39C]\n\t(No symbol) [0x00007FF752BF7153]\n\t(No symbol) [0x00007FF752BC0421]\n\t(No symbol) [0x00007FF752BC11B3]\n\tGetHandleVerifier [0x00007FF7530AD71D+3223453]\n\tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\n\tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\n\tGetHandleVerifier [0x00007FF752DC6A1A+180890]\n\tGetHandleVerifier [0x00007FF752DCE11F+211359]\n\tGetHandleVerifier [0x00007FF752DB5294+109332]\n\tGetHandleVerifier [0x00007FF752DB5442+109762]\n\tGetHandleVerifier [0x00007FF752D9BA59+4825]\n\tBaseThreadInitThunk [0x00007FFA26717374+20]\n\tRtlUserThreadStart [0x00007FFA278BCC91+33]", "trace": "self = <tests.test_main_functionality.TestMainFunctionality object at 0x000001C6021B4C80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"15145b599ae7ede936d281243b1a73e0\")>\n\n    @allure.story(\"Добавление ингредиента увеличивает счётчик\")\n    def test_ingredient_counter_increases(self, driver):\n        driver.get(main_url)\n        constructor = ConstructorPage(driver)\n        initial_count = constructor.get_ingredient_counter()\n>       constructor.add_ingredient_to_cart()\n\ntests\\test_main_functionality.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\constructor_page.py:82: in add_ingredient_to_cart\n    ingredient = self.find_element(ConstructorPageLocators.INGREDIENT)\npages\\base_page.py:64: in find_element\n    return WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"15145b599ae7ede936d281243b1a73e0\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001C6021A68E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF752DACF45+75717]\nE       \tGetHandleVerifier [0x00007FF752DACFA0+75808]\nE       \t(No symbol) [0x00007FF752B78F9A]\nE       \t(No symbol) [0x00007FF752BCF4C6]\nE       \t(No symbol) [0x00007FF752BCF77C]\nE       \t(No symbol) [0x00007FF752C22577]\nE       \t(No symbol) [0x00007FF752BF73BF]\nE       \t(No symbol) [0x00007FF752C1F39C]\nE       \t(No symbol) [0x00007FF752BF7153]\nE       \t(No symbol) [0x00007FF752BC0421]\nE       \t(No symbol) [0x00007FF752BC11B3]\nE       \tGetHandleVerifier [0x00007FF7530AD71D+3223453]\nE       \tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\nE       \tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\nE       \tGetHandleVerifier [0x00007FF752DC6A1A+180890]\nE       \tGetHandleVerifier [0x00007FF752DCE11F+211359]\nE       \tGetHandleVerifier [0x00007FF752DB5294+109332]\nE       \tGetHandleVerifier [0x00007FF752DB5442+109762]\nE       \tGetHandleVerifier [0x00007FF752D9BA59+4825]\nE       \tBaseThreadInitThunk [0x00007FFA26717374+20]\nE       \tRtlUserThreadStart [0x00007FFA278BCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Получение значения счетчика ингредиента", "status": "passed", "start": 1748088729583, "stop": 1748088730110}, {"name": "Добавление ингредиента в корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF752DACF45+75717]\n\tGetHandleVerifier [0x00007FF752DACFA0+75808]\n\t(No symbol) [0x00007FF752B78F9A]\n\t(No symbol) [0x00007FF752BCF4C6]\n\t(No symbol) [0x00007FF752BCF77C]\n\t(No symbol) [0x00007FF752C22577]\n\t(No symbol) [0x00007FF752BF73BF]\n\t(No symbol) [0x00007FF752C1F39C]\n\t(No symbol) [0x00007FF752BF7153]\n\t(No symbol) [0x00007FF752BC0421]\n\t(No symbol) [0x00007FF752BC11B3]\n\tGetHandleVerifier [0x00007FF7530AD71D+3223453]\n\tGetHandleVerifier [0x00007FF7530A7CC2+3200322]\n\tGetHandleVerifier [0x00007FF7530C5AF3+3322739]\n\tGetHandleVerifier [0x00007FF752DC6A1A+180890]\n\tGetHandleVerifier [0x00007FF752DCE11F+211359]\n\tGetHandleVerifier [0x00007FF752DB5294+109332]\n\tGetHandleVerifier [0x00007FF752DB5442+109762]\n\tGetHandleVerifier [0x00007FF752D9BA59+4825]\n\tBaseThreadInitThunk [0x00007FFA26717374+20]\n\tRtlUserThreadStart [0x00007FFA278BCC91+33]\n\n", "trace": "  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\constructor_page.py\", line 82, in add_ingredient_to_cart\n    ingredient = self.find_element(ConstructorPageLocators.INGREDIENT)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 64, in find_element\n    return WebDriverWait(self.driver, timeout).until(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1748088730110, "stop": 1748088740218}], "start": 1748088729234, "stop": 1748088740219, "uuid": "d2f32306-1b25-4f21-851b-783aaa40c271", "historyId": "977724864f6942edb129dbb42cd67473", "testCaseId": "977724864f6942edb129dbb42cd67473", "fullName": "tests.test_main_functionality.TestMainFunctionality#test_ingredient_counter_increases", "labels": [{"name": "story", "value": "Добавление ингредиента увеличивает счётчик"}, {"name": "feature", "value": "Основной функционал"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestMainFunctionality"}, {"name": "host", "value": "DESKTOP-05J7DPF"}, {"name": "thread", "value": "11464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}
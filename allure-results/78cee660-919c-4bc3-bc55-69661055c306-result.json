{"name": "test_toggle_password_field_active", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF77CE1CF65+75717]\n\tGetHandleVerifier [0x00007FF77CE1CFC0+75808]\n\t(No symbol) [0x00007FF77CBE8F9A]\n\t(No symbol) [0x00007FF77CC3F4C6]\n\t(No symbol) [0x00007FF77CC3F77C]\n\t(No symbol) [0x00007FF77CC92577]\n\t(No symbol) [0x00007FF77CC673BF]\n\t(No symbol) [0x00007FF77CC8F39C]\n\t(No symbol) [0x00007FF77CC67153]\n\t(No symbol) [0x00007FF77CC30421]\n\t(No symbol) [0x00007FF77CC311B3]\n\tGetHandleVerifier [0x00007FF77D11D74D+3223469]\n\tGetHandleVerifier [0x00007FF77D117CF2+3200338]\n\tGetHandleVerifier [0x00007FF77D135B23+3322755]\n\tGetHandleVerifier [0x00007FF77CE36A3A+180890]\n\tGetHandleVerifier [0x00007FF77CE3E13F+211359]\n\tGetHandleVerifier [0x00007FF77CE252B4+109332]\n\tGetHandleVerifier [0x00007FF77CE25462+109762]\n\tGetHandleVerifier [0x00007FF77CE0BA79+4825]\n\tBaseThreadInitThunk [0x00007FFA9AA87374+20]\n\tRtlUserThreadStart [0x00007FFA9C0BCC91+33]", "trace": "self = <tests.test_recovery.TestRecoveryPassword object at 0x0000028649454F80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"850b46ef9ecee962e8024ee7b30a02e6\")>\n\n    @allure.story(\"Проверка активации поля при клике на показать/скрыть пароль\")\n    def test_toggle_password_field_active(self, driver):\n        driver.get(login_url)\n        recovery = RecoveryPage(driver)\n>       recovery.toggle_password_visibility()\n\ntests\\test_recovery.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\recovery_page.py:44: in toggle_password_visibility\n    self.click(RecoveryPageLocators.SHOW_HIDE_PASSWORD_BUTTON)\npages\\base_page.py:46: in click\n    element = self.wait_for_element(locator)\npages\\base_page.py:43: in wait_for_element\n    return self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"850b46ef9ecee962e8024ee7b30a02e6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002864945B240>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF77CE1CF65+75717]\nE       \tGetHandleVerifier [0x00007FF77CE1CFC0+75808]\nE       \t(No symbol) [0x00007FF77CBE8F9A]\nE       \t(No symbol) [0x00007FF77CC3F4C6]\nE       \t(No symbol) [0x00007FF77CC3F77C]\nE       \t(No symbol) [0x00007FF77CC92577]\nE       \t(No symbol) [0x00007FF77CC673BF]\nE       \t(No symbol) [0x00007FF77CC8F39C]\nE       \t(No symbol) [0x00007FF77CC67153]\nE       \t(No symbol) [0x00007FF77CC30421]\nE       \t(No symbol) [0x00007FF77CC311B3]\nE       \tGetHandleVerifier [0x00007FF77D11D74D+3223469]\nE       \tGetHandleVerifier [0x00007FF77D117CF2+3200338]\nE       \tGetHandleVerifier [0x00007FF77D135B23+3322755]\nE       \tGetHandleVerifier [0x00007FF77CE36A3A+180890]\nE       \tGetHandleVerifier [0x00007FF77CE3E13F+211359]\nE       \tGetHandleVerifier [0x00007FF77CE252B4+109332]\nE       \tGetHandleVerifier [0x00007FF77CE25462+109762]\nE       \tGetHandleVerifier [0x00007FF77CE0BA79+4825]\nE       \tBaseThreadInitThunk [0x00007FFA9AA87374+20]\nE       \tRtlUserThreadStart [0x00007FFA9C0BCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Показать/скрыть пароль", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF77CE1CF65+75717]\n\tGetHandleVerifier [0x00007FF77CE1CFC0+75808]\n\t(No symbol) [0x00007FF77CBE8F9A]\n\t(No symbol) [0x00007FF77CC3F4C6]\n\t(No symbol) [0x00007FF77CC3F77C]\n\t(No symbol) [0x00007FF77CC92577]\n\t(No symbol) [0x00007FF77CC673BF]\n\t(No symbol) [0x00007FF77CC8F39C]\n\t(No symbol) [0x00007FF77CC67153]\n\t(No symbol) [0x00007FF77CC30421]\n\t(No symbol) [0x00007FF77CC311B3]\n\tGetHandleVerifier [0x00007FF77D11D74D+3223469]\n\tGetHandleVerifier [0x00007FF77D117CF2+3200338]\n\tGetHandleVerifier [0x00007FF77D135B23+3322755]\n\tGetHandleVerifier [0x00007FF77CE36A3A+180890]\n\tGetHandleVerifier [0x00007FF77CE3E13F+211359]\n\tGetHandleVerifier [0x00007FF77CE252B4+109332]\n\tGetHandleVerifier [0x00007FF77CE25462+109762]\n\tGetHandleVerifier [0x00007FF77CE0BA79+4825]\n\tBaseThreadInitThunk [0x00007FFA9AA87374+20]\n\tRtlUserThreadStart [0x00007FFA9C0BCC91+33]\n\n", "trace": "  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\recovery_page.py\", line 44, in toggle_password_visibility\n    self.click(RecoveryPageLocators.SHOW_HIDE_PASSWORD_BUTTON)\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 46, in click\n    element = self.wait_for_element(locator)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 43, in wait_for_element\n    return self.wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\slipk\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1747670407816, "stop": 1747670417910}], "start": 1747670407289, "stop": 1747670417912, "uuid": "4b4b93fa-75a1-4d24-b6f7-5e3e541bb654", "historyId": "0c11937e4ecc6a63d705ff2adb8bd4ab", "testCaseId": "0c11937e4ecc6a63d705ff2adb8bd4ab", "fullName": "tests.test_recovery.TestRecoveryPassword#test_toggle_password_field_active", "labels": [{"name": "story", "value": "Проверка активации поля при клике на показать/скрыть пароль"}, {"name": "feature", "value": "Восстановление пароля"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_recovery"}, {"name": "subSuite", "value": "TestRecoveryPassword"}, {"name": "host", "value": "DESKTOP-05J7DPF"}, {"name": "thread", "value": "18816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_recovery"}]}
{"name": "test_go_to_recovery_password_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF77CE1CF65+75717]\n\tGetHandleVerifier [0x00007FF77CE1CFC0+75808]\n\t(No symbol) [0x00007FF77CBE8F9A]\n\t(No symbol) [0x00007FF77CC3F4C6]\n\t(No symbol) [0x00007FF77CC3F77C]\n\t(No symbol) [0x00007FF77CC92577]\n\t(No symbol) [0x00007FF77CC673BF]\n\t(No symbol) [0x00007FF77CC8F39C]\n\t(No symbol) [0x00007FF77CC67153]\n\t(No symbol) [0x00007FF77CC30421]\n\t(No symbol) [0x00007FF77CC311B3]\n\tGetHandleVerifier [0x00007FF77D11D74D+3223469]\n\tGetHandleVerifier [0x00007FF77D117CF2+3200338]\n\tGetHandleVerifier [0x00007FF77D135B23+3322755]\n\tGetHandleVerifier [0x00007FF77CE36A3A+180890]\n\tGetHandleVerifier [0x00007FF77CE3E13F+211359]\n\tGetHandleVerifier [0x00007FF77CE252B4+109332]\n\tGetHandleVerifier [0x00007FF77CE25462+109762]\n\tGetHandleVerifier [0x00007FF77CE0BA79+4825]\n\tBaseThreadInitThunk [0x00007FFA9AA87374+20]\n\tRtlUserThreadStart [0x00007FFA9C0BCC91+33]", "trace": "self = <tests.test_recovery.TestRecoveryPassword object at 0x000002161B260A10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"70b2cace1397ea365a897e65fcdc89b7\")>\n\n    @allure.story(\"Переход на страницу восстановления пароля\")\n    def test_go_to_recovery_password_page(self, driver):\n        driver.get(login_url)\n        login = LoginPage(driver)\n        login.go_to_recovery()\n        #time.sleep(2)\n>       login.wait_for_element(LoginPageLocators.RECOVERY_PASSWORD_LINK)\n\ntests\\test_recovery.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:43: in wait_for_element\n    return self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"70b2cace1397ea365a897e65fcdc89b7\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002161B3F6700>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF77CE1CF65+75717]\nE       \tGetHandleVerifier [0x00007FF77CE1CFC0+75808]\nE       \t(No symbol) [0x00007FF77CBE8F9A]\nE       \t(No symbol) [0x00007FF77CC3F4C6]\nE       \t(No symbol) [0x00007FF77CC3F77C]\nE       \t(No symbol) [0x00007FF77CC92577]\nE       \t(No symbol) [0x00007FF77CC673BF]\nE       \t(No symbol) [0x00007FF77CC8F39C]\nE       \t(No symbol) [0x00007FF77CC67153]\nE       \t(No symbol) [0x00007FF77CC30421]\nE       \t(No symbol) [0x00007FF77CC311B3]\nE       \tGetHandleVerifier [0x00007FF77D11D74D+3223469]\nE       \tGetHandleVerifier [0x00007FF77D117CF2+3200338]\nE       \tGetHandleVerifier [0x00007FF77D135B23+3322755]\nE       \tGetHandleVerifier [0x00007FF77CE36A3A+180890]\nE       \tGetHandleVerifier [0x00007FF77CE3E13F+211359]\nE       \tGetHandleVerifier [0x00007FF77CE252B4+109332]\nE       \tGetHandleVerifier [0x00007FF77CE25462+109762]\nE       \tGetHandleVerifier [0x00007FF77CE0BA79+4825]\nE       \tBaseThreadInitThunk [0x00007FFA9AA87374+20]\nE       \tRtlUserThreadStart [0x00007FFA9C0BCC91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Переход на страницу восстановления пароля", "status": "passed", "start": 1747673583242, "stop": 1747673583291}], "start": 1747673582725, "stop": 1747673593390, "uuid": "211bdb4b-9415-4008-a6f2-250a2f0f2dff", "historyId": "4ad9ec9d043d8121c92a631decb69449", "testCaseId": "4ad9ec9d043d8121c92a631decb69449", "fullName": "tests.test_recovery.TestRecoveryPassword#test_go_to_recovery_password_page", "labels": [{"name": "feature", "value": "Восстановление пароля"}, {"name": "story", "value": "Переход на страницу восстановления пароля"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_recovery"}, {"name": "subSuite", "value": "TestRecoveryPassword"}, {"name": "host", "value": "DESKTOP-05J7DPF"}, {"name": "thread", "value": "28360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_recovery"}]}